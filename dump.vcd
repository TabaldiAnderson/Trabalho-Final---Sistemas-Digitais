$date
	Tue Sep 14 22:06:22 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 16 ! resultado [15:0] $end
$var reg 16 " A [15:0] $end
$var reg 16 # B [15:0] $end
$var reg 16 $ C [15:0] $end
$var reg 1 % H $end
$var reg 8 & K [7:0] $end
$var reg 1 ' LH $end
$var reg 1 ( LS $end
$var reg 1 ) LX $end
$var reg 2 * M0 [1:0] $end
$var reg 2 + M1 [1:0] $end
$var reg 2 , M2 [1:0] $end
$var reg 1 - clk $end
$scope module bloco1 $end
$var wire 16 . A [15:0] $end
$var wire 16 / B [15:0] $end
$var wire 16 0 C [15:0] $end
$var wire 1 % H $end
$var wire 8 1 K [7:0] $end
$var wire 1 ' LH $end
$var wire 1 ( LS $end
$var wire 1 ) LX $end
$var wire 2 2 M0 [1:0] $end
$var wire 2 3 M1 [1:0] $end
$var wire 2 4 M2 [1:0] $end
$var wire 1 - clk $end
$var wire 16 5 entrada00Mux0 [15:0] $end
$var wire 16 6 resultado [15:0] $end
$var wire 16 7 saidaUla [15:0] $end
$var wire 16 8 saidaRegX [15:0] $end
$var wire 16 9 saidaRegS [15:0] $end
$var wire 16 : saidaRegH [15:0] $end
$var wire 16 ; saidaMux2 [15:0] $end
$var wire 16 < saidaMux1 [15:0] $end
$var wire 16 = saidaMux0 [15:0] $end
$var wire 16 > entradaX [15:0] $end
$scope module m0 $end
$var wire 16 ? A [15:0] $end
$var wire 16 @ B [15:0] $end
$var wire 16 A C [15:0] $end
$var wire 16 B D [15:0] $end
$var wire 2 C sel [1:0] $end
$var wire 16 D saida [15:0] $end
$upscope $end
$scope module m1 $end
$var wire 16 E A [15:0] $end
$var wire 2 F sel [1:0] $end
$var wire 16 G saida [15:0] $end
$var wire 16 H D [15:0] $end
$var wire 16 I C [15:0] $end
$var wire 16 J B [15:0] $end
$upscope $end
$scope module m2 $end
$var wire 16 K B [15:0] $end
$var wire 2 L sel [1:0] $end
$var wire 16 M saida [15:0] $end
$var wire 16 N D [15:0] $end
$var wire 16 O C [15:0] $end
$var wire 16 P A [15:0] $end
$upscope $end
$scope module regH $end
$var wire 1 - clk $end
$var wire 1 ' load $end
$var wire 16 Q entrada [15:0] $end
$var reg 16 R saida [15:0] $end
$upscope $end
$scope module regS $end
$var wire 1 - clk $end
$var wire 1 ( load $end
$var wire 16 S entrada [15:0] $end
$var reg 16 T saida [15:0] $end
$upscope $end
$scope module regX $end
$var wire 1 - clk $end
$var wire 16 U entrada [15:0] $end
$var wire 1 ) load $end
$var reg 16 V saida [15:0] $end
$upscope $end
$scope module ula1 $end
$var wire 16 W A [15:0] $end
$var wire 16 X B [15:0] $end
$var wire 1 % sel $end
$var wire 16 Y saida [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx Y
bx X
bx W
bx V
b100 U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0 L
b100 K
bx J
bx I
bx H
bx G
b1 F
b100 E
b100 D
b0 C
b0 B
b0 A
b0 @
b100 ?
b100 >
b100 =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
b0 5
b0 4
b1 3
b0 2
b100 1
b0 0
b0 /
b0 .
0-
b0 ,
b1 +
b0 *
1)
0(
0'
b100 &
1%
b0 $
b0 #
b0 "
bx !
$end
#1
1-
0)
#2
0-
1'
#3
1-
b0 ;
b0 M
b0 W
b0 =
b0 D
b0 E
b0 K
0'
1(
b1 ,
b1 4
b1 L
b11 +
b11 3
b11 F
b1 *
b1 2
b1 C
#4
0-
bx ;
bx M
bx W
1'
0(
b0 ,
b0 4
b0 L
b1 +
b1 3
b1 F
b10 *
b10 2
b10 C
#5
1-
